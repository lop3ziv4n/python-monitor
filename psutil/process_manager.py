import psutil

print(psutil.pids())

p = psutil.Process(7055)
print(p)

psutil.Process(pid=7055, name='python', started='09:04:44')
print(p.name())
print(p.exe())
print(p.cwd())
print(p.cmdline())
print(p.pid)
print(p.ppid())
print(p.children(recursive=True))
print(p.parent())
print(p.parents())
print(p.status())
print(p.username())
print(p.create_time())
print(p.terminal())
print(p.uids())
print(p.gids())
print(p.cpu_times())
print(p.cpu_percent(interval=1.0))
print(p.cpu_affinity())
print(p.cpu_affinity([0, 1])) # set
print(p.cpu_num())
print(p.memory_info())
print(p.memory_full_info()) # "real" USS memory usage (Linux, macOS, Win only)
print(p.memory_percent())
print(p.memory_maps())
print(p.io_counters())
print(p.open_files())
print(p.connections())
print(p.num_threads())
print(p.num_fds())
print(p.threads())
print(p.num_ctx_switches())
print(p.nice())
print(p.nice(10))
print(p.ionice(psutil.IOPRIO_CLASS_IDLE)) # IO priority (Win and Linux only)
print(p.ionice())
print(p.rlimit(psutil.RLIMIT_NOFILE, (5, 5)))  # set resource limits (Linux only)
print(p.rlimit(psutil.RLIMIT_NOFILE))
print(p.environ())
print(p.as_dict())
print(p.is_running())
print(p.suspend())
print(p.resume())
print(p.terminate())
print(p.kill())
print(p.wait(timeout=3))
print(psutil.test())
